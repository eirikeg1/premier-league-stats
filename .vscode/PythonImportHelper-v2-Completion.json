[
    {
        "label": "PremierLeagueFantasyAPI",
        "importPath": "api.PremierLeagueFantasyAPI",
        "description": "api.PremierLeagueFantasyAPI",
        "isExtraImport": true,
        "detail": "api.PremierLeagueFantasyAPI",
        "documentation": {}
    },
    {
        "label": "PremierLeagueFantasyAPI",
        "importPath": "api.PremierLeagueFantasyAPI",
        "description": "api.PremierLeagueFantasyAPI",
        "isExtraImport": true,
        "detail": "api.PremierLeagueFantasyAPI",
        "documentation": {}
    },
    {
        "label": "Team",
        "importPath": "data_classes.Team",
        "description": "data_classes.Team",
        "isExtraImport": true,
        "detail": "data_classes.Team",
        "documentation": {}
    },
    {
        "label": "Team",
        "importPath": "data_classes.Team",
        "description": "data_classes.Team",
        "isExtraImport": true,
        "detail": "data_classes.Team",
        "documentation": {}
    },
    {
        "label": "Fixtures",
        "importPath": "data_classes.Fixtures",
        "description": "data_classes.Fixtures",
        "isExtraImport": true,
        "detail": "data_classes.Fixtures",
        "documentation": {}
    },
    {
        "label": "Fixtures",
        "importPath": "data_classes.Fixtures",
        "description": "data_classes.Fixtures",
        "isExtraImport": true,
        "detail": "data_classes.Fixtures",
        "documentation": {}
    },
    {
        "label": "Fixtures",
        "importPath": "data_classes.Fixtures",
        "description": "data_classes.Fixtures",
        "isExtraImport": true,
        "detail": "data_classes.Fixtures",
        "documentation": {}
    },
    {
        "label": "LoadingAnimator",
        "importPath": "utils.LoadingAnimator",
        "description": "utils.LoadingAnimator",
        "isExtraImport": true,
        "detail": "utils.LoadingAnimator",
        "documentation": {}
    },
    {
        "label": "LoadingAnimator",
        "importPath": "utils.LoadingAnimator",
        "description": "utils.LoadingAnimator",
        "isExtraImport": true,
        "detail": "utils.LoadingAnimator",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "importPath": "Statistics",
        "description": "Statistics",
        "isExtraImport": true,
        "detail": "Statistics",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "importPath": "Statistics",
        "description": "Statistics",
        "isExtraImport": true,
        "detail": "Statistics",
        "documentation": {}
    },
    {
        "label": "Fixtures",
        "importPath": "premier_league_stats.data_classes.Fixtures",
        "description": "premier_league_stats.data_classes.Fixtures",
        "isExtraImport": true,
        "detail": "premier_league_stats.data_classes.Fixtures",
        "documentation": {}
    },
    {
        "label": "Fixtures",
        "importPath": "premier_league_stats.data_classes.Fixtures",
        "description": "premier_league_stats.data_classes.Fixtures",
        "isExtraImport": true,
        "detail": "premier_league_stats.data_classes.Fixtures",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "field",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "Match",
        "importPath": "premier_league_stats.data_classes.Match",
        "description": "premier_league_stats.data_classes.Match",
        "isExtraImport": true,
        "detail": "premier_league_stats.data_classes.Match",
        "documentation": {}
    },
    {
        "label": "setup",
        "importPath": "setuptools",
        "description": "setuptools",
        "isExtraImport": true,
        "detail": "setuptools",
        "documentation": {}
    },
    {
        "label": "find_packages",
        "importPath": "setuptools",
        "description": "setuptools",
        "isExtraImport": true,
        "detail": "setuptools",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "kind": 6,
        "importPath": "build.lib.src.premier_league_stats.Statistics",
        "description": "build.lib.src.premier_league_stats.Statistics",
        "peekOfCode": "class Statistics:\n    \"\"\"Class for storing and manipulating statistics for the premier league\"\"\"\n    # Team data (Team.name: str -> Team)\n    teams_by_name: dict[Team] = None\n    standings: pd.DataFrame = pd.DataFrame()\n    # Fantasy PL specific data\n    events_data: pd.DataFrame = None\n    game_settings_data: pd.DataFrame = None\n    phases: pd.DataFrame = None\n    # Match data",
        "detail": "build.lib.src.premier_league_stats.Statistics",
        "documentation": {}
    },
    {
        "label": "foo",
        "kind": 2,
        "importPath": "build.lib.src.premier_league_stats.main",
        "description": "build.lib.src.premier_league_stats.main",
        "peekOfCode": "def foo(fixtures):\n    data = [\n        {\n            'code': '123',\n            'event': '1',\n            'finished': True,\n            'kickoff_time': '2022-01-01T12:00:00Z',\n            'minutes': '90',\n            'team_a': '1',\n            'team_a_score': '2',",
        "detail": "build.lib.src.premier_league_stats.main",
        "documentation": {}
    },
    {
        "label": "PremierLeagueFantasyAPI",
        "kind": 6,
        "importPath": "src.premier_league_stats.api.PremierLeagueFantasyAPI",
        "description": "src.premier_league_stats.api.PremierLeagueFantasyAPI",
        "peekOfCode": "class PremierLeagueFantasyAPI:\n    \"\"\"Class which fetches statistics/data from the Premier League Fantasy API\n    Raises:\n        Exception: If statuscode is not 200\n    \"\"\"\n    FANTASY_BASE_URL: str = \"https://fantasy.premierleague.com/api/\"\n    FIXTURES_URL = f\"https://onefootball.com/en/competition/premier-league-9/fixtures\"\n    cached_requests = {}\n    def fetch_static_json(self, cache=True):\n        if cache and (cached := self.cached_requests.get('static')):",
        "detail": "src.premier_league_stats.api.PremierLeagueFantasyAPI",
        "documentation": {}
    },
    {
        "label": "Fixtures",
        "kind": 6,
        "importPath": "src.premier_league_stats.data_classes.Fixtures",
        "description": "src.premier_league_stats.data_classes.Fixtures",
        "peekOfCode": "class Fixtures:\n    def __init__(self, data_json):\n        self.game_weeks = defaultdict(list)\n        if data_json:\n            self.import_fantasy_json(data_json)\n    def import_fantasy_json(self, data: List[dict]):\n        for game in data:\n            # Values\n            id = int(game['code'])\n            event = int(game['event'])",
        "detail": "src.premier_league_stats.data_classes.Fixtures",
        "documentation": {}
    },
    {
        "label": "Match",
        "kind": 6,
        "importPath": "src.premier_league_stats.data_classes.Match",
        "description": "src.premier_league_stats.data_classes.Match",
        "peekOfCode": "class Match:\n    code: int\n    event: int = 0\n    finished: bool = False\n    finished_provisional: bool = False\n    id: int = 0\n    kickoff_time: Optional[str] = None\n    minutes: int = 0\n    provisional_start_time: Optional[str] = None\n    started: bool = False",
        "detail": "src.premier_league_stats.data_classes.Match",
        "documentation": {}
    },
    {
        "label": "News",
        "kind": 6,
        "importPath": "src.premier_league_stats.data_classes.News",
        "description": "src.premier_league_stats.data_classes.News",
        "peekOfCode": "class News:\n    description: str\n    time_added: str",
        "detail": "src.premier_league_stats.data_classes.News",
        "documentation": {}
    },
    {
        "label": "Player",
        "kind": 6,
        "importPath": "src.premier_league_stats.data_classes.Player",
        "description": "src.premier_league_stats.data_classes.Player",
        "peekOfCode": "class Player:\n    def __init__(\n        self,\n        id: int,\n        name: str,\n        team: int,\n        position: str = None, # singular_position in api\n        photo: str = None,\n        squad_number: int = None,\n        stats: pd.Series = None",
        "detail": "src.premier_league_stats.data_classes.Player",
        "documentation": {}
    },
    {
        "label": "Team",
        "kind": 6,
        "importPath": "src.premier_league_stats.data_classes.Team",
        "description": "src.premier_league_stats.data_classes.Team",
        "peekOfCode": "class Team:\n    \"\"\"\n    Class for storing and manipulating team data\n    \"\"\"\n    def __init__(\n        self,\n        pandas_data: pd.Series = None,\n        id: int = None,\n        name: str = None,\n        played: int = None,",
        "detail": "src.premier_league_stats.data_classes.Team",
        "documentation": {}
    },
    {
        "label": "LoadingAnimator",
        "kind": 6,
        "importPath": "src.premier_league_stats.utils.LoadingAnimator",
        "description": "src.premier_league_stats.utils.LoadingAnimator",
        "peekOfCode": "class LoadingAnimator:\n    _animation_speed = 100\n    _animation_length = 20\n    _direction = 1\n    # \". . . . . . o O o . . . . . . .\"\n    # \". . . . . o O o . . . . . . . .\"\n    def _circle_and_dot_pattern(self):\n        frame = 0\n        while True:\n            yield f\"{' . ' * frame}o O o{' . ' * (self._animation_length - frame)}\"",
        "detail": "src.premier_league_stats.utils.LoadingAnimator",
        "documentation": {}
    },
    {
        "label": "Statistics",
        "kind": 6,
        "importPath": "src.premier_league_stats.Statistics",
        "description": "src.premier_league_stats.Statistics",
        "peekOfCode": "class Statistics:\n    \"\"\"Class for storing and manipulating statistics for the premier league\"\"\"\n    # Team data (Team.name: str -> Team)\n    teams_by_name: dict[Team] = None\n    standings: pd.DataFrame = pd.DataFrame()\n    # Fantasy PL specific data\n    events_data: pd.DataFrame = None\n    game_settings_data: pd.DataFrame = None\n    phases: pd.DataFrame = None\n    # Match data",
        "detail": "src.premier_league_stats.Statistics",
        "documentation": {}
    },
    {
        "label": "fixtures",
        "kind": 2,
        "importPath": "tests.data_classes.test_Fixtures",
        "description": "tests.data_classes.test_Fixtures",
        "peekOfCode": "def fixtures():\n    return Fixtures(None)\ndef test_import_fantasy_json(fixtures: Fixtures):\n    data = [\n        {\n            'code': '123',\n            'event': '1',\n            'finished': True,\n            'kickoff_time': '2022-01-01T12:00:00Z',\n            'minutes': '90',",
        "detail": "tests.data_classes.test_Fixtures",
        "documentation": {}
    },
    {
        "label": "test_import_fantasy_json",
        "kind": 2,
        "importPath": "tests.data_classes.test_Fixtures",
        "description": "tests.data_classes.test_Fixtures",
        "peekOfCode": "def test_import_fantasy_json(fixtures: Fixtures):\n    data = [\n        {\n            'code': '123',\n            'event': '1',\n            'finished': True,\n            'kickoff_time': '2022-01-01T12:00:00Z',\n            'minutes': '90',\n            'id': '123',\n            'team_a': '1',",
        "detail": "tests.data_classes.test_Fixtures",
        "documentation": {}
    },
    {
        "label": "project_root",
        "kind": 5,
        "importPath": "tests.conftest",
        "description": "tests.conftest",
        "peekOfCode": "project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsrc_path = os.path.join(project_root, 'src')\nsys.path.insert(0, src_path)",
        "detail": "tests.conftest",
        "documentation": {}
    },
    {
        "label": "src_path",
        "kind": 5,
        "importPath": "tests.conftest",
        "description": "tests.conftest",
        "peekOfCode": "src_path = os.path.join(project_root, 'src')\nsys.path.insert(0, src_path)",
        "detail": "tests.conftest",
        "documentation": {}
    },
    {
        "label": "VERSION",
        "kind": 5,
        "importPath": "setup",
        "description": "setup",
        "peekOfCode": "VERSION = '0.0.1' \nDESCRIPTION = 'Premier league package for analyzing Premier League statistics'\nLONG_DESCRIPTION = 'My first Python package with a slightly longer description'\n# Setting up\nsetup(\n       # the name must match the folder name 'verysimplemodule'\n        name=\"premier_league_stats\", \n        version=VERSION,\n        author=\"Eirik Eggset\",\n        author_email=\"<mail@mail.com>\",",
        "detail": "setup",
        "documentation": {}
    },
    {
        "label": "DESCRIPTION",
        "kind": 5,
        "importPath": "setup",
        "description": "setup",
        "peekOfCode": "DESCRIPTION = 'Premier league package for analyzing Premier League statistics'\nLONG_DESCRIPTION = 'My first Python package with a slightly longer description'\n# Setting up\nsetup(\n       # the name must match the folder name 'verysimplemodule'\n        name=\"premier_league_stats\", \n        version=VERSION,\n        author=\"Eirik Eggset\",\n        author_email=\"<mail@mail.com>\",\n        description=DESCRIPTION,",
        "detail": "setup",
        "documentation": {}
    },
    {
        "label": "LONG_DESCRIPTION",
        "kind": 5,
        "importPath": "setup",
        "description": "setup",
        "peekOfCode": "LONG_DESCRIPTION = 'My first Python package with a slightly longer description'\n# Setting up\nsetup(\n       # the name must match the folder name 'verysimplemodule'\n        name=\"premier_league_stats\", \n        version=VERSION,\n        author=\"Eirik Eggset\",\n        author_email=\"<mail@mail.com>\",\n        description=DESCRIPTION,\n        long_description=LONG_DESCRIPTION,",
        "detail": "setup",
        "documentation": {}
    }
]